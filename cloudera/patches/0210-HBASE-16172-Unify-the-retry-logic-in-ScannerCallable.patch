From 8ae8f0ec8de617a9ca493b3948462b8d46a4222a Mon Sep 17 00:00:00 2001
From: tedyu <yuzhihong@gmail.com>
Date: Mon, 18 Jul 2016 06:54:09 -0700
Subject: [PATCH 210/219] HBASE-16172 Unify the retry logic in
 ScannerCallableWithReplicas and
 RpcRetryingCallerWithReadReplicas

Change-Id: I28a81545473a5329d46e14ff24d08c1d579e0a88
Reason: Bug
Author: Ramkrishna S. Vasudevan and Ted Yu
Ref: CDH-45554
---
 .../org/apache/hadoop/hbase/client/HTable.java     |    2 +-
 .../client/RpcRetryingCallerWithReadReplicas.java  |   15 ++++++++++-----
 .../hbase/client/ScannerCallableWithReplicas.java  |    5 ++++-
 3 files changed, 15 insertions(+), 7 deletions(-)

diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java
index d6ab8e2..12381aa 100644
--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java
+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/HTable.java
@@ -941,7 +941,7 @@ public class HTable implements HTableInterface, RegionLocator {
       tableConfiguration.getRetriesNumber(),
       operationTimeout,
       tableConfiguration.getPrimaryCallTimeoutMicroSecond());
-    return callable.call();
+    return callable.call(operationTimeout);
   }
 
 
diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RpcRetryingCallerWithReadReplicas.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RpcRetryingCallerWithReadReplicas.java
index 025daa0..4eed023 100644
--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RpcRetryingCallerWithReadReplicas.java
+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/RpcRetryingCallerWithReadReplicas.java
@@ -47,10 +47,8 @@ import java.util.Collections;
 import java.util.List;
 import java.util.concurrent.CancellationException;
 import java.util.concurrent.ExecutionException;
-import java.util.concurrent.Executor;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Future;
-import java.util.concurrent.RunnableFuture;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.TimeoutException;
 
@@ -194,7 +192,7 @@ public class RpcRetryingCallerWithReadReplicas {
    * Globally, the number of retries, timeout and so on still applies, but it's per replica,
    * not global. We continue until all retries are done, or all timeouts are exceeded.
    */
-  public synchronized Result call()
+  public Result call(int operationTimeout)
       throws DoNotRetryIOException, InterruptedIOException, RetriesExhaustedException {
     boolean isTargetReplicaSpecified = (get.getReplicaId() >= 0);
 
@@ -227,10 +225,17 @@ public class RpcRetryingCallerWithReadReplicas {
 
     try {
       try {
-        Future<Result> f = cs.take();
-        return f.get();
+        long start = EnvironmentEdgeManager.currentTime();
+        Future<Result> f = cs.poll(operationTimeout, TimeUnit.MILLISECONDS);
+        long duration = EnvironmentEdgeManager.currentTime() - start;
+        if (f == null) {
+          throw new RetriesExhaustedException("timed out after " + duration + " ms");
+        }
+        return f.get(operationTimeout - duration, TimeUnit.MILLISECONDS);
       } catch (ExecutionException e) {
         throwEnrichedException(e, retries);
+      } catch (TimeoutException te) {
+        throw new RetriesExhaustedException("timed out after " + operationTimeout + " ms");
       }
     } catch (CancellationException e) {
       throw new InterruptedIOException();
diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallableWithReplicas.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallableWithReplicas.java
index f8feca1..f2c9fce 100644
--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallableWithReplicas.java
+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/ScannerCallableWithReplicas.java
@@ -41,6 +41,7 @@ import org.apache.hadoop.hbase.HRegionInfo;
 import org.apache.hadoop.hbase.RegionLocations;
 import org.apache.hadoop.hbase.TableName;
 import org.apache.hadoop.hbase.util.Bytes;
+import org.apache.hadoop.hbase.util.EnvironmentEdgeManager;
 import org.apache.hadoop.hbase.util.Pair;
 
 import com.google.common.annotations.VisibleForTesting;
@@ -195,9 +196,11 @@ class ScannerCallableWithReplicas implements RetryingCallable<Result[]> {
     addCallsForOtherReplicas(cs, rl, 0, rl.size() - 1);
 
     try {
+      long start = EnvironmentEdgeManager.currentTime();
       Future<Pair<Result[], ScannerCallable>> f = cs.poll(timeout, TimeUnit.MILLISECONDS);
+      long duration = EnvironmentEdgeManager.currentTime() - start;
       if (f != null) {
-        Pair<Result[], ScannerCallable> r = f.get(timeout, TimeUnit.MILLISECONDS);
+        Pair<Result[], ScannerCallable> r = f.get(timeout - duration, TimeUnit.MILLISECONDS);
         if (r != null && r.getSecond() != null) {
           updateCurrentlyServingReplica(r.getSecond(), r.getFirst(), done, pool);
         }
-- 
1.7.9.5

