From 2f102f0dbe0c83789e97a2f2e2794406599b69f6 Mon Sep 17 00:00:00 2001
From: Huaxiang Sun <hsun@cloudera.com>
Date: Thu, 16 Jun 2016 16:32:02 -0700
Subject: [PATCH 167/219] HBASE-15496 Throw RowTooBigException only for user
 scan/get (Guanghao Zhang)

Reason: Bug
Author: Guanghao Zhang
Ref: CDH-41134

Change-Id: I54659b55983506bf57f84aa08dadaf0b5cb8b468
---
 .../hbase/regionserver/ScanQueryMatcher.java       |    4 ++++
 .../hadoop/hbase/regionserver/StoreScanner.java    |    4 ++--
 2 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java
index c832255..2ee9ee1 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanQueryMatcher.java
@@ -622,6 +622,10 @@ public class ScanQueryMatcher {
     }
   }
 
+  boolean isUserScan() {
+    return this.isUserScan;
+  }
+
   //Used only for testing purposes
   static MatchCode checkColumn(ColumnTracker columnTracker, byte[] bytes, int offset,
       int length, long ttl, byte type, boolean ignoreCount) throws IOException {
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java
index f1bb398..eb09d9d 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java
@@ -336,7 +336,7 @@ public class StoreScanner extends NonReversedNonLazyKeyValueScanner
       if (!isParallelSeek) {
         long totalScannersSoughtBytes = 0;
         for (KeyValueScanner scanner : scanners) {
-          if (totalScannersSoughtBytes >= maxRowSize) {
+          if (matcher.isUserScan() && totalScannersSoughtBytes >= maxRowSize) {
             throw new RowTooBigException("Max row size allowed: " + maxRowSize
               + ", but row is bigger than that");
           }
@@ -560,7 +560,7 @@ public class StoreScanner extends NonReversedNonLazyKeyValueScanner
             scannerContext.incrementSizeProgress(CellUtil.estimatedHeapSizeOfWithoutTags(cell));
             scannerContext.incrementBatchProgress(1);
 
-            if (totalBytesRead > maxRowSize) {
+            if (matcher.isUserScan() && totalBytesRead > maxRowSize) {
               throw new RowTooBigException("Max row size allowed: " + maxRowSize
                   + ", but the row is bigger than that.");
             }
-- 
1.7.9.5

